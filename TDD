import unittest

class Animal:
  def __init__(self,age,weight):
      self.age=age
      self.weight=weight

  def __privateMethod(self):
      print(self.weight)

  def getWeight(self):
      return self.weight

  def eat(self,kgm):
      self.weight+=kgm
      return self.weight
      
  def getAge(self):
      return self.age


class Oiseau(Animal):
    def attribut_oiseau(self,vertebre,taille_bec):
        self.vertebre=vertebre
        self.taille_bec=taille_bec

    def __str__(self):
        return "Je suis un oiseau of "+str(self.getWeight())+"kg"

    def voler(self):
        print("Je m'envole pioupioupiou'")

    def taille(self):
        return("Le bec de cet oiseau a une taille de"+str(self.taille_bec)+"cm")


class Insecte_volant(Animal):
    def attribut_insecte(self,nb_ailes,duree_de_vie):
        self.nb_ailes=nb_ailes
        self.duree_de_vie=duree_de_vie

    def rapport_poids_aile(self):
        return((self.nb_ailes)/(self.weight))

    def ddv(self):
        return self.duree_de_vie



class TestAnimal(unittest.TestCase):
    a=Animal(10,2)
    a.eat(5)

    def test_eat(self):
        self.assertEqual(self.a.eat(5),12,"Should be 12")

    def test_age(self):
        self.assertEqual(self.a.getAge(),10,"pb")
        

class TestInsecte(unittest.TestCase):
    b=Insecte_volant(2,5)
    b.nb_ailes=2
    b.duree_de_vie=1
   
    
    def test_rapport(self):
        self.assertEqual(self.b.rapport_poids_aile(),0.4,"Should be 2/10")
        
    def test_ddv(self):
        self.assertEqual(self.b.ddv(),1,"pb")
